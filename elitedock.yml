services:
  traefik:
    image: traefik:v3
    container_name: traefik
    command:
      - "--log.level=DEBUG" 
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--certificatesresolvers.lehttp.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.lehttp.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.lehttp.acme.storage=/etc/traefik/acme/acme.json"
    environment:
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
      - DUCKDNS_DOMAIN=${DUCKDNS_DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-cert:/etc/traefik/acme"
    restart: unless-stopped
    
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  nextcloud:
    image: nextcloud:31-apache   
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=${DUCKDNS_DOMAIN}
      - OVERWRITECLIURL=https://${DUCKDNS_DOMAIN}
      - TRUSTED_PROXIES=172.18.0.0/16
      - TRUSTED_DOMAINS=${DUCKDNS_DOMAIN}
    volumes:
      - nc-data:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${DUCKDNS_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=lehttp"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-headers@docker"
      - "traefik.http.middlewares.nextcloud-headers.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains=true"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  collabora:
    image: collabora/code:latest
    container_name: collabora
    environment:
      - domain=${DUCKDNS_DOMAIN}
      - username=${COLLABORA_ADMIN_USER}           
      - password=${COLLABORA_PASS} 
      - server_name=collabora.${DUCKDNS_DOMAIN}
      - extra_params=--o:ssl.enable=false --o:ssl.termination=true --o:storage.wopi.host=https://elitedock.duckdns.org --o:storage.wopi.allowlist=https://elitedock.duckdns.org
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.collabora.rule=Host(`collabora.${DUCKDNS_DOMAIN}`)"
      - "traefik.http.routers.collabora.entrypoints=websecure"
      - "traefik.http.routers.collabora.tls.certresolver=lehttp"
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9980/hosting/discovery"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  traefik-cert:
  db-data:
  nc-data:
